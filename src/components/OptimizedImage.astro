---
// OptimizedImage.astro
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  placeholder?: boolean;
}

const { 
  src, 
  alt, 
  width, 
  height, 
  class: className = '', 
  loading = 'lazy',
  priority = false,
  placeholder = true
} = Astro.props;
---

<div class={`image-container ${className}`}>
  {placeholder && (
    <div class="placeholder" style={`aspect-ratio: ${width}/${height}`}>
      <div class="spinner"></div>
    </div>
  )}
  
  <img 
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={priority ? 'eager' : loading}
    decoding="async"
    onload="this.parentElement.classList.add('loaded')"
    style="max-width: 100%; height: auto;"
  />
</div>

<style>
  .image-container {
    position: relative;
    display: block;
  }
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
  }
  
  .spinner {
    width: 40px;
    height: 40px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  .image-container img {
    display: block;
    max-width: 100%;
    height: auto;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .image-container.loaded img {
    opacity: 1;
  }
  
  .image-container.loaded .placeholder {
    display: none;
  }
  
  @keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>