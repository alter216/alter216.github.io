---
import { type CollectionEntry, getCollection, render } from "astro:content";
import { Image } from "astro:assets";

import BaseLayout from "@/layouts/BaseLayout.astro";
import ReadingProgressBar from "@/components/ReadingProgressBar.astro";

import { formatDate } from "@/lib/util";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Calculate reading time
function calculateReadingTime(text: string): number {
  const wordsPerMinute = 250; // Average reading speed
  // Remove markdown syntax for more accurate word count
  const cleanText = text
    .replace(/#{1,6}\s+/g, '') // Remove headers
    .replace(/\[(.+?)\]\(.+?\)/g, '$1') // Remove links, keep text
    .replace(/!\[.*?\]\(.+?\)/g, '') // Remove images
    .replace(/```[\s\S]*?```/g, '') // Remove code blocks
    .trim();
  
  const words = cleanText.split(/\s+/).filter(word => word.length > 0).length;
  const readingTime = Math.ceil(words / wordsPerMinute);
  return readingTime;
}

// Get the raw content and calculate reading time
const readingTime = entry.body ? calculateReadingTime(entry.body) : 0;
---

<BaseLayout>
  <ReadingProgressBar />
  <div>
  <h1
    class="text-[36px] leading-snug font-bold text-balance text-black dark:text-white"
  >
    {entry.data.title}
  </h1>
  <p class="text-muted-text dark:text-dark-muted-text mt-3">
    {formatDate(entry.data.publicationDate)}
  </p>
  <p class="text-blue-500 dark:text-orange-400 mt-1 text-sm">
    {readingTime} min read
  </p>
  
    {
      entry.data.image && (
        <Image
          src={entry.data.image}
          alt={entry.data.imageAlt || ""}
          class="mb-12 h-auto w-full mt-6"
          draggable="false"
        />
      )
    }
        {
          entry.data.imageCaption && (
            <p class="text-muted-text dark:text-dark-muted-text text-sm italic text-center mt-4 mb-8">
              {entry.data.imageCaption}
            </p>
          )
        }
    <hr
      class="border-muted-text dark:border-dark-muted-text my-12 border-[0.5px] opacity-10 dark:opacity-15"
    />
    <div class="prose mx-auto">
      <Content />
    </div>
    <hr
      class="border-muted-text dark:border-dark-muted-text my-32 border-[0.5px] opacity-10 dark:opacity-15"
    />
  </div>
</BaseLayout>
